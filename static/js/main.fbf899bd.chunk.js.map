{"version":3,"sources":["api/users.ts","components/NewTodo/NewTodo.tsx","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","NewTodo","users","onAdd","useState","title","setTitle","titleHasError","setTitleHasError","userSelect","setUserSelect","userSelectHasError","setUserSelectHasError","handlerOnSubmit","completed","userId","user","onSubmit","e","preventDefault","className","htmlFor","type","placeholder","value","onChange","event","currentTitle","input","target","match","handlerTitleInput","handlerUserSelect","disabled","map","UserInfo","href","TodoInfo","todo","cn","TodoList","todos","usersFromServer","find","indexedUsers","reduce","total","current","App","todosToRender","setTodosToRender","lastTodoIndex","maxI","curI","currentList","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fbf899bd.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { useState } from 'react';\nimport { User } from '../../types/User';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  users: User[];\n  onAdd: (todo: Omit<Todo, 'id'>) => void;\n};\n\nexport const NewTodo: React.FC<Props> = ({ users, onAdd }) => {\n  const [title, setTitle] = useState<string>('');\n  const [titleHasError, setTitleHasError] = useState<boolean>(false);\n\n  const [userSelect, setUserSelect] = useState<number | null>(null);\n  const [userSelectHasError, setUserSelectHasError] = useState<boolean>(false);\n\n  const isAllowedSymbols = (input: string): boolean => {\n    const pattern = /^[^@!#â„–$;%:&?8(){}*.\"\\\\/|'^,]+$/;\n\n    if (!input) {\n      return true;\n    }\n\n    return !!input.match(pattern);\n  };\n\n  const clearTodoFields = () => {\n    setTitle('');\n    setUserSelect(null);\n  };\n\n  const handlerTitleInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(currentTitle => {\n      return isAllowedSymbols(event.target.value)\n        ? event.target.value\n        : currentTitle;\n    });\n    setTitleHasError(false);\n  };\n\n  const handlerUserSelect = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserSelect(+event.target.value);\n    setUserSelectHasError(false);\n  };\n\n  const handlerOnSubmit = () => {\n    setTitleHasError(!title);\n    setUserSelectHasError(!userSelect);\n\n    if (!title || !userSelect) {\n      return;\n    }\n\n    onAdd({\n      title,\n      completed: false,\n      userId: userSelect,\n      user: null,\n    });\n    clearTodoFields();\n  };\n\n  return (\n    <form\n      onSubmit={(e) => {\n        e.preventDefault();\n        handlerOnSubmit();\n      }}\n    >\n      <div className=\"field\">\n        <label htmlFor=\"titleInput\">Title: </label>\n        <input\n          type=\"text\"\n          data-cy=\"titleInput\"\n          id=\"titleInput\"\n          placeholder=\"Enter a title\"\n          value={title}\n          onChange={(event) => handlerTitleInput(event)}\n        />\n        {titleHasError\n          && <span className=\"error\">Please enter a title</span>}\n      </div>\n\n      <div className=\"field\">\n        <label htmlFor=\"userSelect\">User: </label>\n        <select\n          data-cy=\"userSelect\"\n          id=\"userSelect\"\n          value={userSelect === null ? 0 : userSelect}\n          onChange={(event) => handlerUserSelect(event)}\n        >\n          <option\n            value=\"0\"\n            disabled\n          >\n            Choose a user\n          </option>\n          {users.map(user => (\n            <option\n              key={user.id}\n              value={user.id}\n            >\n              {user.name}\n            </option>\n          ))}\n        </select>\n        {userSelectHasError\n          && <span className=\"error\">Please choose a user</span>}\n      </div>\n\n      <button\n        type=\"submit\"\n        data-cy=\"submitButton\"\n      >\n        Add\n      </button>\n    </form>\n  );\n};\n","import { User } from '../../types/User';\n\ntype Props = {\n  user: User | null;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  if (!user) {\n    return (\n      <span className=\"UserInfo\">\n        Anonymous\n      </span>\n    );\n  }\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n      {user.name}\n    </a>\n  );\n};\n","import cn from 'classnames';\n\nimport { UserInfo } from '../UserInfo';\n\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todo: Todo\n};\n\nexport const TodoInfo: React.FC<Props> = ({\n  todo: {\n    id,\n    completed,\n    title,\n    user,\n  },\n}) => {\n  return (\n    <article\n      data-id={id}\n      className={cn('TodoInfo', { 'TodoInfo--completed': completed })}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n      <UserInfo user={user} />\n    </article>\n  );\n};\n","import { TodoInfo } from '../TodoInfo';\n\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => {\n        return (\n          <TodoInfo\n            key={todo.id}\n            todo={todo}\n          />\n        );\n      })}\n    </section>\n  );\n};\n","import { useState } from 'react';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nimport { NewTodo } from './components/NewTodo';\nimport { TodoList } from './components/TodoList';\n\nimport { Todo } from './types/Todo';\nimport { User } from './types/User';\n\nimport './App.scss';\n\nconst users: User[] = [...usersFromServer];\n\nfunction getUser(userId: number): User | null {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  // if there is no user with a given userId\n  return foundUser || null;\n}\n\nconst todos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\ntype IndexedUsers = {\n  [index: number]: User;\n};\n\nconst indexedUsers = users.reduce((\n  total: IndexedUsers, current: User,\n): IndexedUsers => {\n  // eslint-disable-next-line no-param-reassign\n  total[current.id] = { ...current };\n\n  return total;\n}, {});\n\nexport const App = () => {\n  const [todosToRender, setTodosToRender] = useState<Todo[]>(todos);\n\n  const addTodo = (todo: Omit<Todo, 'id'>) => {\n    const lastTodoIndex = todosToRender.reduce((maxI, curI) => {\n      return curI.id > maxI ? curI.id : maxI;\n    }, 0);\n\n    const user = indexedUsers[todo.userId];\n\n    setTodosToRender(currentList => [...currentList, {\n      ...todo,\n      id: lastTodoIndex + 1,\n      user,\n    }]);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <NewTodo\n        users={users}\n        onAdd={addTodo}\n      />\n\n      <TodoList\n        todos={todosToRender}\n      />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}